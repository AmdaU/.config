#!/bin/bash

#get directory of this script
DIR="$( cd -- "$( dirname -- "${BASH_SOURCE[0]:-$0}"; )" &> /dev/null && pwd 2> /dev/null; )";

# SERVICE is the passed argument
SERVICE=$1
# get the stored id of the window, if possible
NODE_ID=$(cat $DIR/$SERVICE.dat)

# check if the service is running, if not: runs it!
if pgrep -x "$SERVICE" --ignore-case >/dev/null 
then
    echo "$SERVICE is running"
    # checks if window is hidden on current desktop
    hidden=$(bspc query -N -n .hidden -n $NODE_ID)
    if [ -z "$hidden" ]; then
        # checks if window is on current desktop at all
        # if not, assumes it is on a another desktop and tries to move it on current
        here=$(bspc query -N -n $NODE_ID.local)
        if [ -z "$here" ]; then
            echo "node is not hidden but not on current desktop, shifting here..."
            bspc node $NODE_ID -d $(bspc query -D -d focused)
            bspc node $NODE_ID -l above
        else
            echo "hidding node"
            bspc node $NODE_ID -g hidden=on
            bspc node $NODE_ID -d '^10'
        fi
    else
        echo "unhidding node"
        bspc node $NODE_ID -g hidden=off
        bspc node $NODE_ID -d $(bspc query -D -d focused)
        bspc node $NODE_ID -l above
    fi
else
    echo "$SERVICE is stopped"
    echo "starting $SERVICE..."
		$SERVICE &> /dev/null &
    # lets a bit of time for window to open
    sleep 3
    # newest means newest selected node, and not newest *created* node
    # therefore, if you select an other window is the 3 seconds window, the script will confuse the two
    # I found no better way to do it with bspwm ¯\_(ツ)_/¯
    NODE_ID=$(bspc query -N -n newest)
    echo "starting in window $NODE_ID"
    echo $NODE_ID > $DIR/$SERVICE.dat
fi

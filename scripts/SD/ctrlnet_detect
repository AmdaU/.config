#!/bin/python3
import argparse
import json
import requests
import io
import base64
from PIL import Image, PngImagePlugin


def file_to_base64(path):
    pil_image = Image.open(path)
    with io.BytesIO() as stream:
        pil_image.save(stream, "PNG", pnginfo=None)
        base64_str = str(base64.b64encode(stream.getvalue()), "utf-8")
        return "data:image/png;base64," + base64_str


# Argument parsing ----------------------------------------------------------------------------
parser = argparse.ArgumentParser()
parser.add_argument('-o',
                    '--output',
                    help='The name of the output file',
                    type=str)
parser.add_argument('--url', help='url of the server', type=str)
parser.add_argument('-i', '--input', help='input image', required=True)
parser.add_argument('-m', '--module', help='module to use',
                    type=str, required=True)
parser.add_argument('-r', '--res', type=str, default=512)
parser.add_argument('-a',
                    type=str, default=64)
parser.add_argument('-b',
                    type=str, default=64)

args = parser.parse_args()

# doing stuff to the arg -----------------------------------------------------

# If no url is given, assume is running locally
url = args.url if args.url else "http://127.0.0.1:7860"


payload = {
    "controlnet_input_images": [file_to_base64(args.input)],
    "controlnet_module": args.module,
    "controlnet_processor_res": args.res,
    "controlnet_threshold_a": args.a,
    "controlnet_threshold_b": args.b

}

response = requests.post(url=f'{url}/controlnet/detect',
                         json=payload)
print(response)

for i, im in enumerate(response.json()['images']):
    image = Image.open(io.BytesIO(base64.b64decode(im.split(",", 1)[0])))
    png_payload = {"image": "data:image/png;base64," + im}
    input_file_name = args.input.split("/")[-1]
    print(f"filename is {input_file_name}")
    filename = args.output if args.output else input_file_name
    image.save(f"{'.'.join(filename.split('.')[:-1])}_{args.module}.png")
